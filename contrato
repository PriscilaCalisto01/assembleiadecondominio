}
     // Evento a ser disparado quando um votante definiu o seu resp
    evento Votou (endereço quemVotou, uint propostaVotada, bool qualVoto);
    evento Votou (endereço quemVotou, uint propostaVotada, uint8 qualVoto);
    
    // Evento a ser disparado em alguem
    evento FoiAUrna (uint quando, endereço quemVotou, uint propostaVotada, bool qualVoto);
    evento FoiAUrna (uint quando, endereço quemVotou, uint propostaVotada, uint8 qualVoto);
     // Informações gerais da Assembleia
    Proposta [] propostas;
@@ -239,10 +239,10 @@ contrato VotacaoAssembleia {
            Um voto deve estar aberto para ser permitido
            Um voto não pode ser alterado de uma vez e um voto não pode ser alterado.
    @param numeroProposta - Numero identificador da proposta
    @param favoravelAProposta - Verdadeiro / Falso ou votante expressa se aprova ou não a proposta
    @param favoravelAProposta - 1 para se favoravel a proposta e 0 caso não seja
    @return Verdadeiro caso o voto tenha sido computado com sucesso
    * /
    function votar (uint numeroProposta, bool favoravelAProposta) retornos públicos (bool) {
    function votar (uint numeroProposta, uint8 favoravelAProposta) retornos públicos (bool) {
        emitir FoiAUrna (agora, msg.sender, numeroProposta, favoravelAProposta);
        require (dataFimVotacao> = agora, "Votacao encerrada");
        require (dataInicioVotacao <= agora, "Votação ainda não foi aberta");
@@ -251,7 +251,7 @@ contrato VotacaoAssembleia {
            Votante storage votanteTemporario = votantes [msg.sender];
            if (votanteTemporario.existe) {
                if (! propostaTemporario.quemVotou [votanteTemporario.conta] .existe) {
                    if (favoravelAProposta == true ) {
                    if (favoravelAProposta > 0 ) {
                        propostaTemporario.quotaDeVotos = propostaTemporario.quotaDeVotos + votanteTemporario.quotaDeVotos;
                    }
                    emitir Votou (msg.sender, numeroProposta, favoravelAProposta);
  
2  docs / js / abi.js
@@ -1,5 +1,5 @@
const VotacaoAssembleiaABI = [{"anônimo": falso, "insumos": [{"indexado": falso, "nome": "quemVotou", "tipo": "endereço"}, {"indexado": falso, "nome" : "propostaVotada", "tipo": "uint256"}, {"indexado": falso, "nome": "qualVoto", "tipo": "bool"}], "nome": "Votou", "tipo" : "evento"}, {"constante": falso, "entradas": [{"nome": "qualDataFimVotacao", "tipo": "uint256"}], "nome": "definirFimVotacao", "saídas": [ ], "pagável": false, "stateMutability": "não pagável", "type": "function"}, {"constante": false, "inputs": [{"name": "qualDataInicioVotacao "," tipo ":" uint256 "}]," nome ":" definirInicioVotacao "," outputs ": []," pagável ": false," stateMutability ":" nonpayable "," type ":" function "} , {"constante": falso, "entradas": [{"nome": "secretarioDesignado", "tipo": "endereço"}], "nome": "designarSecretario", "saídas": [], "pagável" : false, "stateMutability": "não pagável", "tipo": "função"}, {"constante": falso, "entradas": [{"nome": "qualTextoDaProposta", "tipo": "cadeia"}, {"nome": "qualProponente", "tipo": "endereço"}, {"nome": "qualQuotaMinimaParaAprovacao","type": "uint256"}], "name": "incluiProposta", "outputs": [], "pagável": false, "stateMutability": "nonpayable", "type": "function"}, {" constante ": false", entradas ": [{" name ":" enderecoVotante "," type ":" endereço "}, {" name ":" quotaDeVotos "," type ":" uint256 "}, {" name " : "qualIDVotante", "tipo": "string"}], "name": "incluiVotante", "outputs": [], "pagável": false, "stateMutability": "nonpayable", "type": "function "}, {" constante ": false," entradas ": [{" name ":" numeroProposta "," type ":" uint256 "}, {" name ":"favoravelAProposta "," type ":" bool "}]," name ":" votar "," outputs ": [{" nome ":" "," tipo ":" bool "}]," pagável ": falso, "stateMutability": "nonpayable", "type": "função"}, {"inputs": [{"name": "qualMotivoConvocatoria", "type": "string"}], "pagável": false, "stateMutability ":" nonpayable "," type ":" construtor "}, {" constante ": verdadeiro," entradas ": []," nome ":" detalhesAssembleia "," saídas ": [{" name ":" ", "tipo": "endereço"}, {"nome": "", "tipo": "endereço"}, {"nome": "", "tipo": "cadeia"},{"name": "", "type": "uint256"}, {"nome": "", "tipo": "uint256"}, {"nome": "", "tipo": "uint256"} , {"name": "", "type": "uint256"}], "pagável": false, "stateMutability": "modo de exibição", "tipo": "função"}, {"constante": verdadeiro " entradas ": [{" name ":" numeroProposta "," type ":" uint256 "}]," nome ":" pesquisarProposta "," outputs ": [{" name ":" "," type ":" uint256 "}, {" name ":" "," type ":" string "}, {" nome ":" "," tipo ":" endereço "}, {" nome ":" "," tipo ":" uint256 "}, {"name": "", "type": "uint256"}], "pagável": false, "stateMutability": "modo de exibição", "tipo": "função"}, {"constante": verdadeiro, "entradas": [{"name": "indiceVotante", "type": "endereço"}], "name": "pesquisarVotante", "outputs": [{"name": "", "type": " endereço "}, {" name ":" "," type ":" uint256 "}]," pagável ": false," stateMutability ":" vista "," tipo ":" função "}, {" constante ": true, "entradas": [{"name": "indiceVotante", "type": "uint256"}], "nome": "pesquisarVotantePorIndice", "outputs": [{"name": ""," tipo ":" endereço "}, {" nome ":" "," tipo ":" uint256 "}]," pagável ": false," stateMutability ":" vista "," tipo ":" função " }, {"constante": verdadeiro, "entradas": [{"name": "numeroProposta", "type": "uint256"}], "name": "propostaAprovada", "outputs": [{"name" : "", "tipo": "bool"}], "pagável": false, "stateMutability": "vista", "tipo": "função"}, {"constante": verdadeiro, "entradas": [] , "nome": "qualMotivoDaConvocatoria", "saídas": [{"name": "", "type": "string"}], "pagável": false, "stateMutability": "ver "," tipo ":" função "}, {" constante ": verdadeiro," entradas ": []," nome ":" quandoEncerraVotacao "," saídas ": [{" name ":" "," type " : "uint256"}], "pagável": false, "stateMutability": "vista", "tipo": "função"}, {"constante": verdadeiro, "entradas": [], "nome": "totalDePropostas "," outputs ": [{" name ":" "," type ":" uint256 "}]," pagável ": false," stateMutability ":" view "," tipo ":" função "}, {" constante ": verdadeiro", entradas ": []," nome ":" totalDeVotantes "," saídas ": [{" name ":" "," type ":" uint256 "}]," pagável ": false,"stateMutability": "view", "type": "function"}];
const  contractAddress  =  " 0xdeb56576a6d9c1b53ad75b22380fae8a127aea0e " ;
const  contractAddress  =  " 0x06301ac70fc2100b3edc9bc0abb159160e6c00cc " ;
contrato var ;
var conta;
var trxObj;
